{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard-service.service.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/inventory/inventory.component.css","webpack:///./src/app/inventory/inventory.component.html","webpack:///./src/app/inventory/inventory.component.ts","webpack:///./src/app/navigation/navigation.component.css","webpack:///./src/app/navigation/navigation.component.html","webpack:///./src/app/navigation/navigation.component.ts","webpack:///./src/app/new-order/new-order.component.css","webpack:///./src/app/new-order/new-order.component.html","webpack:///./src/app/new-order/new-order.component.ts","webpack:///./src/app/pop-up-window/pop-up-window.component.css","webpack:///./src/app/pop-up-window/pop-up-window.component.html","webpack:///./src/app/pop-up-window/pop-up-window.component.ts","webpack:///./src/app/promo/promo.component.css","webpack:///./src/app/promo/promo.component.html","webpack:///./src/app/promo/promo.component.ts","webpack:///./src/app/services/inventory.service.ts","webpack:///./src/app/services/new-order.service.ts","webpack:///./src/app/services/promo.service.ts","webpack:///./src/app/services/shipping.service.ts","webpack:///./src/app/shipping/shipping.component.css","webpack:///./src/app/shipping/shipping.component.html","webpack:///./src/app/shipping/shipping.component.ts","webpack:///./src/app/tables/inventory-table/inventory-table.component.css","webpack:///./src/app/tables/inventory-table/inventory-table.component.html","webpack:///./src/app/tables/inventory-table/inventory-table.component.ts","webpack:///./src/app/tables/new-order-table/new-order-table.component.css","webpack:///./src/app/tables/new-order-table/new-order-table.component.html","webpack:///./src/app/tables/new-order-table/new-order-table.component.ts","webpack:///./src/app/tables/promo-list-table/promo-list.component.css","webpack:///./src/app/tables/promo-list-table/promo-list.component.html","webpack:///./src/app/tables/promo-list-table/promo-list.component.ts","webpack:///./src/app/tables/shipping-table/shipping-table.component.css","webpack:///./src/app/tables/shipping-table/shipping-table.component.html","webpack:///./src/app/tables/shipping-table/shipping-table.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {InventoryComponent} from './inventory/inventory.component';\nimport {PromoComponent} from './promo/promo.component';\nimport {ShippingComponent} from './shipping/shipping.component';\nimport {NewOrderComponent} from './new-order/new-order.component';\nimport {HomeComponent} from './home/home.component';\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'inventory', component: InventoryComponent},\n  {path: 'promo', component: PromoComponent},\n  {path: 'shipping', component: ShippingComponent},\n  {path: 'addorder', component: NewOrderComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\nexport const routingComponents = [HomeComponent, InventoryComponent, PromoComponent, ShippingComponent, NewOrderComponent]\n","module.exports = \"\"","module.exports = \"\\n<router-outlet></router-outlet>\\n\"","import {Component} from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor() {\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {\n  MatButtonModule, MatCardModule, MatDialogModule,\n  MatGridListModule,\n  MatIconModule, MatInputModule,\n  MatMenuModule, MatPaginatorModule, MatProgressSpinnerModule,\n  MatSidenavModule,\n  MatSortModule,\n  MatTableModule,\n  MatToolbarModule\n} from '@angular/material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HeaderComponent} from './header/header.component';\nimport { HomeComponent } from './home/home.component';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {InventoryService} from './services/inventory.service';\nimport { InventoryTableComponent } from './tables/inventory-table/inventory-table.component';\nimport { ShippingTableComponent } from './tables/shipping-table/shipping-table.component';\nimport { PromoListComponent } from './tables/promo-list-table/promo-list.component';\nimport {ShippingService} from './services/shipping.service';\nimport {PromoService} from './services/promo.service';\nimport { NewOrderTableComponent } from './tables/new-order-table/new-order-table.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NewOrderService} from './services/new-order.service';\nimport { PopUpWindowComponent } from './pop-up-window/pop-up-window.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    routingComponents,\n    HomeComponent,\n    NavigationComponent,\n    InventoryTableComponent,\n    ShippingTableComponent,\n    PromoListComponent,\n    NewOrderTableComponent,\n    PopUpWindowComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatGridListModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatCardModule,\n    BrowserAnimationsModule,\n    HttpClientModule\n  ],\n  exports: [\n    MatToolbarModule,\n    MatSidenavModule,\n    MatGridListModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatCardModule,\n  ],\n  providers: [InventoryService,\n              ShippingService,\n              PromoService,\n              NewOrderService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {Tiles} from './models/tiles';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardServiceService {\n\n\n  tiles: Tiles[] = [\n    {text: 'Promo', cols: 2, rows: 2, color: '', url: '/promo'},\n    {text: 'Inventory', cols: 2, rows: 2, color: '#fff', url: '/inventory'},\n    {text: 'Add Order', cols: 2, rows: 2, color: '#fff', url: '/addorder'},\n    {text: 'Shipping', cols: 2, rows: 2, color: '', url: '/shipping'},\n  ];\n  constructor() { }\n}\n","module.exports = \"\"","module.exports = \"<mat-toolbar>\\n  <mat-toolbar-row class=\\\"logo\\\">\\n    <span><a href=\\\"#\\\" ></a></span>\\n  </mat-toolbar-row>\\n  <mat-toolbar-row class=\\\"subtitle\\\">\\n    <span>Dashboard</span>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"a:-webkit-any-link {\\r\\n  text-decoration: none;\\r\\n  font-size: 4rem;\\r\\n  font-weight: 900;\\r\\n  background: linear-gradient(-45deg, #98f74a 25%, #0887cc 100%);\\r\\n  -webkit-background-clip: text;\\r\\n  -webkit-text-fill-color: transparent;\\r\\n  text-fill-color: transparent;\\r\\n\\r\\n}\\na:-moz-any-link {\\r\\n  text-decoration: none;\\r\\n  font-size: 4rem;\\r\\n  font-weight: 900;\\r\\n  background: linear-gradient(-45deg, #98f74a 25%, #0887cc 100%);\\r\\n  -webkit-background-clip: text;\\r\\n  -webkit-text-fill-color: transparent;\\r\\n  text-fill-color: transparent;\\r\\n\\r\\n}\\na:any-link {\\r\\n  text-decoration: none;\\r\\n  font-size: 4rem;\\r\\n  font-weight: 900;\\r\\n  background: linear-gradient(-45deg, #98f74a 25%, #0887cc 100%);\\r\\n  -webkit-background-clip: text;\\r\\n  -webkit-text-fill-color: transparent;\\r\\n  text-fill-color: transparent;\\r\\n\\r\\n}\\r\\n\"","module.exports = \"<app-header></app-header>\\n<mat-grid-list cols=\\\"4\\\" rowHeight=\\\"100px\\\" gutterSize=\\\"60\\\">\\n  <mat-grid-tile\\n    *ngFor=\\\"let tile of tiles\\\"\\n    [colspan]=\\\"tile.cols\\\"\\n    [rowspan]=\\\"tile.rows\\\"\\n    [style.background]=\\\"tile.color\\\">\\n    <a routerLink=\\\"{{tile.url}}\\\">{{tile.text}}</a>\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Tiles} from '../models/tiles';\nimport {DashboardServiceService} from '../dashboard-service.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  tiles: Tiles[];\n\n  constructor(private dashboardService: DashboardServiceService) {\n    console.log(dashboardService);\n  }\n\n  ngOnInit() {\n    this.tiles = this.dashboardService.tiles;\n  }\n\n}\n","module.exports = \"\\r\\n\\r\\n\"","module.exports = \"<app-header></app-header>\\n<app-navigation></app-navigation>\\n<app-inventory-table></app-inventory-table>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {InventoryService} from '../services/inventory.service';\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.css']\n})\nexport class InventoryComponent implements OnInit {\n\n\n  constructor() { }\n\n\n\n  ngOnInit() {\n\n  }\n\n}\n","module.exports = \"mat-icon {\\r\\n  color: red;\\r\\n}\\r\\n.mat-icon-button {\\r\\n  margin-left: 95%;\\r\\n  margin-top: -50px;\\r\\n  margin-right: auto;\\r\\n  position: absolute;\\r\\n}\\r\\na:-webkit-any-link {\\r\\n  text-decoration: none;\\r\\n  color: #000;\\r\\n}\\r\\n\"","module.exports = \"<mat-menu #appMenu=\\\"matMenu\\\"  color=\\\"accent\\\" xPosition=\\\"before\\\">\\n  <ng-template matMenuContent>\\n    <button mat-menu-item><a routerLink=\\\"\\\">Home</a></button>\\n    <button mat-menu-item><a routerLink=\\\"/promo\\\">Promo</a></button>\\n    <button mat-menu-item><a routerLink=\\\"/inventory\\\">Inventory</a></button>\\n    <button mat-menu-item><a routerLink=\\\"/addorder\\\">Add Order</a></button>\\n    <button mat-menu-item><a routerLink=\\\"/shipping\\\">Shipping</a></button>\\n  </ng-template>\\n\\n</mat-menu>\\n<button mat-icon-button [matMenuTriggerFor]=\\\"appMenu\\\">\\n  <mat-icon>more_vert</mat-icon>\\n</button>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-header></app-header>\\n<app-navigation></app-navigation>\\n<app-new-order-table></app-new-order-table>\\n<span class=\\\"toolbar-spacer\\\"></span>\\n<span class=\\\"add\\\">Add</span> <mat-icon (click)=\\\"addContact()\\\">add</mat-icon>\\n<app-pop-up-window></app-pop-up-window>\\n\"","import { Component, Inject, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef, MatDialog} from '@angular/material';\nimport {NewOrderService} from '../services/new-order.service';\nimport {PopUpWindowComponent} from '../pop-up-window/pop-up-window.component';\n\n@Component({\n  selector: 'app-new-order',\n  templateUrl: './new-order.component.html',\n  styleUrls: ['./new-order.component.css']\n})\nexport class NewOrderComponent implements OnInit {\n\n  isPopUpOpened = true;\n\n  constructor(private dialog?: MatDialog,\n              private newOrderService?: NewOrderService) { }\n\n  ngOnInit() {}\n\n  addOrder() {\n    this.isPopUpOpened = true;\n    const dialogRef = this.dialog.open(PopUpWindowComponent, {\n      data: {}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      this.isPopUpOpened = false;\n    });\n  }\n  editOrder(id: number) {\n    this.isPopUpOpened = true;\n    const order = this.newOrderService.getAllContacts().find(c => c.id === id);\n    const dialogRef = this.dialog.open(PopUpWindowComponent, {\n      data: order\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.isPopUpOpened = false;\n    });\n  }\n  deleteOrder(id: number) {\n    this.newOrderService.deleteContact(id);\n  }\n}\n","module.exports = \"\"","module.exports = \"<mat-card-header>\\n  <mat-toolbar class=\\\"toolbar\\\" color=\\\"accent\\\">\\n    <mat-card-title>Student Information</mat-card-title>\\n    <span class=\\\"toolbar-spacer\\\"></span>\\n    <mat-icon (click)=\\\"onClick()\\\">cancel</mat-icon>\\n  </mat-toolbar>\\n</mat-card-header>\\n<mat-card-content>\\n  <div class=\\\"container\\\">\\n    <form [formGroup]=\\\"newOrderForm\\\" (submit)=\\\"onSubmit()\\\">\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-4 col-lg-4\\\">\\n            <label>MerchantId</label>\\n            <input type=\\\"text\\\" formControlName=\\\"merchantId\\\" class=\\\"form-control\\\">\\n          </div>\\n          <div class=\\\"col-md-4 col-lg-4\\\">\\n            <label>Quantity Ordered</label>\\n            <input type=\\\"text\\\" formControlName=\\\"qtyOrdered\\\" class=\\\"form-control\\\">\\n          </div>\\n          <div class=\\\"col-md-4 col-lg-4\\\">\\n            <label>Name</label>\\n            <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md- col-lg-4\\\">\\n            <label>Description</label>\\n            <input type=\\\"text\\\" formControlName=\\\"description\\\" class=\\\"form-control\\\">\\n          </div>\\n          <div class=\\\"col-md-4 col-lg-4\\\">\\n            <label>Price</label>\\n            <input type=\\\"text\\\" formControlName=\\\"price\\\" class=\\\"form-control\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 col-lg-12\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-outline-success btn-block mt-4 mb-0\\\"><mat-icon>save</mat-icon></button>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </form>\\n  </div>\\n</mat-card-content>\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {NewOrderService} from '../services/new-order.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {NewOrderComponent} from '../new-order/new-order.component';\n\n@Component({\n  selector: 'app-pop-up-window',\n  templateUrl: './pop-up-window.component.html',\n  styleUrls: ['./pop-up-window.component.css']\n})\nexport class PopUpWindowComponent implements OnInit {\n\n  public newOrderForm: FormGroup;\n  constructor(private formBuilder: FormBuilder,\n              private dialogRef: MatDialogRef<NewOrderComponent>,\n              private newOrderService: NewOrderService,\n              @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  onClick(): void {\n    this.dialogRef.close();\n  }\n  ngOnInit() {\n    this.newOrderForm = this.formBuilder.group({\n      transactionId: [this.data.transactionId],\n      merchantId: [this.data.merchantId, [Validators.required]],\n      qtyOrdered: [this.data.qtyOrdered, [Validators.required]],\n      name: [this.data.name, [Validators.required]],\n      description: [this.data.description, [Validators.required]],\n      price: [this.data.price, [Validators.required]],\n      itemId: [this.data.itemId, [Validators.required]],\n      taxTotal: [this.data.taxTotal, [Validators.required]],\n      shippingTotal: [this.data.shippingTotal, [Validators.required]],\n      discountTotal: [this.data.discountTotal, [Validators.required]],\n      orderSubTotal: [this.data.orderSubTotal, [Validators.required]],\n      promoAmt: [this.data.promoAmt, [Validators.required]],\n      promoId: [this.data.promoId, [Validators.required]],\n      promotionName: [this.data.promotionName, [Validators.required]],\n      start: [this.data.start, [Validators.required]],\n      end: [this.data.end, [Validators.required]],\n      minimumOrderValue: [this.data.minimumOrderValue, [Validators.required]],\n      promotionType: [this.data.promotionType, [Validators.required]],\n      merchantOrderReference: [this.data.merchantOrderReference, [Validators.required]],\n      orderDate: [this.data.orderDate, [Validators.required]],\n      signature: [this.data.signature, [Validators.required]]\n    });\n  }\n\n  onSubmit() {\n    this.newOrderService.addNewOrder(this.newOrderForm.value);\n    this.dialogRef.close();\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-header></app-header>\\n<app-navigation></app-navigation>\\n<app-promo-list></app-promo-list>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-promo',\n  templateUrl: './promo.component.html',\n  styleUrls: ['./promo.component.css']\n})\nexport class PromoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {IcurrentInventory} from '../icurrent-inventory';\n\nexport interface InventoryApi {\n  items: IcurrentInventory[];\n  total_count: number;\n}\n\n@Injectable()\nexport class InventoryService {\n\n  constructor(private http: HttpClient) { }\n\n  getInventory(): Observable< InventoryApi> {\n  const _url = 'http://jst.edchavez.com/api/inventory/getInventory/';\n       return this.http.get<InventoryApi>(_url);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {NewOrder} from '../newOrder';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewOrderService {\n\n  newOrder: NewOrder[] = [];\n  constructor() { }\n\n  addNewOrder(order: NewOrder){\n    this.newOrder.push(order);\n  }\n  deleteContact(_id: number) {\n    const contact = this.newOrder.findIndex(c => c.id === _id);\n    this.newOrder.splice(contact, 1);\n  }\n\n  getAllContacts() {\n    return this.newOrder;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {IcurrentPromoList} from '../icurrent-promo-list';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PromoService {\n\n  private _url = 'http://jst.edchavez.com/api/promo/';\n\n  constructor(private http: HttpClient) { }\n\n  getPromo(): Observable<IcurrentPromoList[]> {\n    return this.http.get<IcurrentPromoList[]>(this._url);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {IcurrentShipping} from '../icurrent-shipping';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShippingService {\n  private _url = 'http://jst.edchavez.com/api/shipping/';\n\n  constructor(private http: HttpClient) { }\n\n  getShipping(): Observable<IcurrentShipping[]> {\n    return this.http.get<IcurrentShipping[]>(this._url);\n  }\n}\n","module.exports = \"\"","module.exports = \"<app-header></app-header>\\n<app-navigation></app-navigation>\\n<app-shipping-table></app-shipping-table>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shipping',\n  templateUrl: './shipping.component.html',\n  styleUrls: ['./shipping.component.css']\n})\nexport class ShippingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"/* Structure */\\r\\n.container {\\r\\n  position: relative;\\r\\n  width: 90%;\\r\\n}\\r\\n.table-container {\\r\\n  position: relative;\\r\\n  overflow: auto;\\r\\n  margin-top: 5%;\\r\\n  margin-left: 10%;\\r\\n  margin-right: auto;\\r\\n}\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\n.loading-shade {\\r\\n  position: absolute;\\r\\n  top: -200px;\\r\\n  left: 0;\\r\\n  bottom: 56px;\\r\\n  right: 0;\\r\\n  height: 100vh;\\r\\n  width: 100vw;\\r\\n  background: rgba(0, 0, 0, 0.25);\\r\\n  z-index: 1;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n}\\r\\n.mat-header-cell {\\r\\n  font-size: 16px;\\r\\n  color: black;\\r\\n}\\r\\n.mat-column-created {\\r\\n  max-width: 124px;\\r\\n}\\r\\n.mat-paginator {\\r\\n  max-width: 90%;\\r\\n  margin-left: 10%;\\r\\n  margin-right: auto;\\r\\n}\\r\\n.mat-row:nth-child(even){\\r\\n  background-color: rgb(219, 219, 219);\\r\\n}\\r\\n.mat-row:nth-child(odd){\\r\\n  background-color: rgb(237, 238, 239);\\r\\n}\\r\\n\\r\\n\\r\\n\"","module.exports = \"\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"loading-shade\\\"\\r\\n       *ngIf=\\\"isLoadingResults\\\">\\r\\n    <mat-spinner *ngIf=\\\"isLoadingResults\\\"></mat-spinner>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"table-container\\\">\\r\\n    <div class=\\\"display-1\\\"><h1>Inventory</h1></div>\\r\\n    <mat-form-field  color=\\\"accent\\\">\\r\\n      <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"example-table\\\"\\r\\n           matSort matSortActive=\\\"itemId\\\" matSortDirection=\\\"asc\\\" matSortDisableClear>\\r\\n\\r\\n      <!-- itemId Column -->\\r\\n      <ng-container matColumnDef=\\\"itemId\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear>ID</th>\\r\\n        <td mat-cell *matCellDef=\\\"let row\\\">{{row.itemId}}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Name Column -->\\r\\n      <ng-container matColumnDef=\\\"name\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\\r\\n        <td mat-cell *matCellDef=\\\"let row\\\">{{row.name}}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Description Column -->\\r\\n      <ng-container matColumnDef=\\\"description\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Description</th>\\r\\n        <td mat-cell *matCellDef=\\\"let row\\\">{{row.description}}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Price Column -->\\r\\n      <ng-container matColumnDef=\\\"price\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Price</th>\\r\\n        <td mat-cell *matCellDef=\\\"let row\\\">{{row.price}}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- inStock Column -->\\r\\n      <ng-container matColumnDef=\\\"inStock\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Stock</th>\\r\\n        <td mat-cell *matCellDef=\\\"let row\\\" [ngStyle]=\\\"{ 'color': (row.inStock ? 'green' : 'red') }\\\">\\r\\n          <mat-icon>{{row.inStock ? 'check' : 'error'}}</mat-icon>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n  </div>\\r\\n\\r\\n  <mat-paginator class=\\\"  mat-elevation-z8\\\" [length]=\\\"resultsLength\\\" showFirstLastButtons></mat-paginator>\\r\\n</div>\\r\\n\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {merge, Observable, of as observableOf} from 'rxjs';\nimport {MatPaginator, MatSort, MatSortable, MatTableDataSource} from '@angular/material';\nimport { InventoryService} from '../../services/inventory.service';\nimport {ShippingService} from '../../services/shipping.service';\nimport {IcurrentInventory} from '../../icurrent-inventory';\nimport {HttpClient} from '@angular/common/http';\nimport {catchError, map, startWith, switchMap} from 'rxjs/internal/operators';\n\n\n@Component({\n  selector: 'app-inventory-table',\n  templateUrl: './inventory-table.component.html',\n  styleUrls: ['./inventory-table.component.css']\n})\nexport class InventoryTableComponent implements OnInit {\n\n  displayedColumns = ['itemId', 'name', 'description', 'price', 'inStock'];\n  exampleDatabase: InventoryService | null;\n  dataSource: IcurrentInventory[] = [];\n\n  resultsLength;\n  isLoadingResults = true;\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(private inventoryService: InventoryService, private http: HttpClient) {}\n\n  ngOnInit() {\n    this.exampleDatabase = new InventoryService(this.http);\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n\n    merge(this.sort.sortChange, this.paginator.page)\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          this.isLoadingResults = true;\n          return this.exampleDatabase.getInventory();\n        }),\n        map(data => {\n          this.isLoadingResults = false;\n          this.resultsLength = data.total_count;\n\n          return data.items;\n        }),\n        catchError(() => {\n          this.isLoadingResults = false;\n          return observableOf([]);\n        })\n      ).subscribe(data => this.dataSource = data);\n\n  }\n  applyFilter(filterValue: any) {\n    this.dataSource.filter = filterValue;\n  }\n}\n\n\n\n\n","module.exports = \"/* Structure */\\r\\n.example-container {\\r\\n  position: relative;\\r\\n}\\r\\n.table-container {\\r\\n  position: relative;\\r\\n  max-height: 400px;\\r\\n  overflow: auto;\\r\\n  width: 95%;\\r\\n  margin-top: 5%;\\r\\n  margin-left: 2.5%;\\r\\n  margin-right: auto;\\r\\n}\\r\\n.example-loading-shade {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  bottom: 56px;\\r\\n  right: 0;\\r\\n  background: rgba(0, 0, 0, 0.15);\\r\\n  z-index: 1;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n}\\r\\n.mat-header-cell {\\r\\n  font-size: 16px;\\r\\n  color: black;\\r\\n}\\r\\n.mat-row:nth-child(even){\\r\\n  background-color: rgb(219, 219, 219);\\r\\n}\\r\\n.mat-row:nth-child(odd){\\r\\n  background-color: rgb(237, 238, 239);\\r\\n}\\r\\n.hideLoader {\\r\\n  display: none;\\r\\n}\\r\\nmat-footer-row mat-footer-cell {\\r\\n  justify-content: center;\\r\\n  font-style: italic;\\r\\n}\\r\\n.mat-form-field {\\r\\n  font-size: 16px;\\r\\n  width: 100%;\\r\\n}\\r\\nbutton.mat-fab.mat-accent {\\r\\n  margin-left: 48%;\\r\\n  transition: color 0.2s ease, background-color 0.2s ease, -webkit-transform 0.3s ease;\\r\\n  transition: color 0.2s ease, background-color 0.2s ease, transform 0.3s ease;\\r\\n  transition: color 0.2s ease, background-color 0.2s ease, transform 0.3s ease, -webkit-transform 0.3s ease;\\r\\n}\\r\\nbutton.mat-fab:hover {\\r\\n  -webkit-transform: rotate(460deg);\\r\\n          transform: rotate(460deg);\\r\\n  box-shadow: 10px 0 20px rgba(0, 0, 0, 0.19), 6px 0 6px rgba(0, 0, 0, 0.23);\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"table-container\\\">\\n  <div class=\\\"display-1\\\"><h1>New Order</h1></div>\\n  <button mat-fab color=\\\"accent\\\" ><mat-icon (click)=\\\"addOrder()\\\">add</mat-icon></button>\\n  <mat-form-field  color=\\\"accent\\\">\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n  </mat-form-field>\\n  <mat-table [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"shipOptionId\\\" matSortDirection=\\\"asc\\\" matSortDisableClear>\\n\\n    <!-- PromoId Column -->\\n    <ng-container matColumnDef=\\\"transactionId\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Trans ID </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.transactionId}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Promotion Name Column -->\\n    <ng-container matColumnDef=\\\"merchantId\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Merchant ID </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.merchantId}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Promo Amount Column -->\\n    <ng-container matColumnDef=\\\"qtyOrdered\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Quantity </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.qtyOrdered}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Minimum Order Value Column -->\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Order SubTotal Column -->\\n    <ng-container matColumnDef=\\\"description\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Description </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Start Promo Date Column -->\\n    <ng-container matColumnDef=\\\"price\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Price </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.price}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- End Promo Date Column -->\\n    <ng-container matColumnDef=\\\"itemId\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Item ID </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.itemId}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Promotion Type Column -->\\n    <ng-container matColumnDef=\\\"taxTotal\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Tax Total </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.taxTotal}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Promotion Type Column -->\\n    <ng-container matColumnDef=\\\"shippingTotal\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Ship Total </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.shippingTotal}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Promotion Type Column -->\\n    <ng-container matColumnDef=\\\"discountTotal\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Discount Total </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.discountTotal}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Promotion Type Column -->\\n    <ng-container matColumnDef=\\\"orderSubTotal\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Order SubTotal </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.orderSubTotal}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Promotion Type Column -->\\n    <ng-container matColumnDef=\\\"promoAmt\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Promo Amt </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.promoAmt}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Promotion Type Column -->\\n    <ng-container matColumnDef=\\\"promoId\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Promo ID </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.promoId}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Promotion Type Column -->\\n    <ng-container matColumnDef=\\\"promotionName\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Promotion Name </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.promotionName}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Promotion Type Column -->\\n    <ng-container matColumnDef=\\\"start\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Start </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.start}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Promotion Type Column -->\\n    <ng-container matColumnDef=\\\"end\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> End </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.end}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Promotion Type Column -->\\n    <ng-container matColumnDef=\\\"minimumOrderValue\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Min Order </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.minimumOrderValue}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Promotion Type Column -->\\n    <ng-container matColumnDef=\\\"promotionType\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Promo Type </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.promotionType}} </mat-cell>\\n    </ng-container>\\n    <!-- Promotion Type Column -->\\n    <ng-container matColumnDef=\\\"merchantOrderReference\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Reference </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.merchantOrderReference}} </mat-cell>\\n    </ng-container>\\n    <!-- Promotion Type Column -->\\n    <ng-container matColumnDef=\\\"orderDate\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Order Date </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.orderDate}} </mat-cell>\\n    </ng-container>\\n    <!-- Promotion Type Column -->\\n    <ng-container matColumnDef=\\\"signature\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Signature </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.signature}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Loader -->\\n    <ng-container matColumnDef=\\\"loading\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\"> Loading data...</mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"noData\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\"> Data no found</mat-footer-cell>\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hideLoader': dataSource!=null}\\\"></mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\" [ngClass]=\\\"{'hideLoader': !(dataSource!=null && dataSource.data.length==0)}\\\"></mat-footer-row>\\n\\n  </mat-table>\\n  <mat-paginator class=\\\"mat-elevation-z8\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\n\\n</div>\\n\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatPaginator, MatSort} from '@angular/material';\n\n@Component({\n  selector: 'app-new-order-table',\n  templateUrl: './new-order-table.component.html',\n  styleUrls: ['./new-order-table.component.css']\n})\nexport class NewOrderTableComponent implements OnInit {\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  dataSource;\n  displayedColumns = ['transactionId',\n                      'merchantId',\n                      'qtyOrdered',\n                      'name',\n                      'description',\n                      'price',\n                      'itemId',\n                      'taxTotal',\n                      'shippingTotal',\n                      'discountTotal',\n                      'orderSubTotal',\n                      'promoAmt',\n                      'promoId',\n                      'promotionName',\n                      'start',\n                      'end',\n                      'minimumOrderValue',\n                      'promotionType',\n                      'merchantOrderReference',\n                      'orderDate',\n                      'signature'];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"/* Structure */\\r\\n.example-container {\\r\\n  position: relative;\\r\\n}\\r\\n.table-container {\\r\\n  position: relative;\\r\\n  max-height: 400px;\\r\\n  overflow: auto;\\r\\n  width: 80%;\\r\\n  margin-top: 5%;\\r\\n  margin-left: 10%;\\r\\n  margin-right: auto;\\r\\n}\\r\\n.example-loading-shade {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  bottom: 56px;\\r\\n  right: 0;\\r\\n  background: rgba(0, 0, 0, 0.15);\\r\\n  z-index: 1;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n}\\r\\n.mat-header-cell {\\r\\n  font-size: 16px;\\r\\n  color: black;\\r\\n}\\r\\n.mat-row:nth-child(even){\\r\\n  background-color: rgb(219, 219, 219);\\r\\n}\\r\\n.mat-row:nth-child(odd){\\r\\n  background-color: rgb(237, 238, 239);\\r\\n}\\r\\n.hideLoader {\\r\\n  display: none;\\r\\n}\\r\\nmat-footer-row mat-footer-cell {\\r\\n  justify-content: center;\\r\\n  font-style: italic;\\r\\n}\\r\\n.mat-form-field {\\r\\n  font-size: 16px;\\r\\n  width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"table-container\\\">\\n  <div class=\\\"display-1\\\"><h1>Promotion List</h1></div>\\n  <mat-form-field  color=\\\"accent\\\">\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n  </mat-form-field>\\n  <mat-table [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"shipOptionId\\\" matSortDirection=\\\"asc\\\" matSortDisableClear>\\n\\n    <!-- PromoId Column -->\\n    <ng-container matColumnDef=\\\"promoId\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Promo ID </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.promoId}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Promotion Name Column -->\\n    <ng-container matColumnDef=\\\"promotionName\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Promotion Name </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.promotionName}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Promo Amount Column -->\\n    <ng-container matColumnDef=\\\"promoAmt\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Amount </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.promoAmt}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Minimum Order Value Column -->\\n    <ng-container matColumnDef=\\\"minimumOrderValue\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Minimum Order Value </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.minimumOrderValue}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Order SubTotal Column -->\\n    <ng-container matColumnDef=\\\"orderSubTotal\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Order Sub Total </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.orderSubTotal}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Start Promo Date Column -->\\n    <ng-container matColumnDef=\\\"start\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Start Promo </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.start}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- End Promo Date Column -->\\n    <ng-container matColumnDef=\\\"end\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> End Promo </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.end}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Promotion Type Column -->\\n    <ng-container matColumnDef=\\\"promotionType\\\">\\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Promotion Type </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.promotionType}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Loader -->\\n    <ng-container matColumnDef=\\\"loading\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\"> Loading data...</mat-footer-cell>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"noData\\\">\\n      <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\"> Data no found</mat-footer-cell>\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hideLoader': dataSource!=null}\\\"></mat-footer-row>\\n    <mat-footer-row *matFooterRowDef=\\\"['noData']\\\" [ngClass]=\\\"{'hideLoader': !(dataSource!=null && dataSource.data.length==0)}\\\"></mat-footer-row>\\n\\n  </mat-table>\\n  <mat-paginator class=\\\"mat-elevation-z8\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\n\\n</div>\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\nimport {PromoService} from '../../services/promo.service';\n\n@Component({\n  selector: 'app-promo-list',\n  templateUrl: './promo-list.component.html',\n  styleUrls: ['./promo-list.component.css']\n})\nexport class PromoListComponent implements OnInit {\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  dataSource;\n  displayedColumns = ['promoId',\n                      'promotionName',\n                      'promoAmt',\n                      'minimumOrderValue',\n                      'orderSubTotal',\n                      'start',\n                      'end',\n                      'promotionType'];\n\n  constructor(private promoService: PromoService) {}\n\n  ngOnInit() {\n    this.promoService.getPromo().subscribe(results => {\n      if (!results) {\n        return;\n      }\n      this.dataSource = new MatTableDataSource(results);\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n","module.exports = \"/* Structure */\\r\\n.example-container {\\r\\n  position: relative;\\r\\n}\\r\\n.table-container {\\r\\n  position: relative;\\r\\n  max-height: 400px;\\r\\n  overflow: auto;\\r\\n  width: 80%;\\r\\n  margin-top: 5%;\\r\\n  margin-left: 10%;\\r\\n  margin-right: auto;\\r\\n}\\r\\n.example-loading-shade {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  bottom: 56px;\\r\\n  right: 0;\\r\\n  background: rgba(0, 0, 0, 0.15);\\r\\n  z-index: 1;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n}\\r\\n.mat-header-cell {\\r\\n  font-size: 16px;\\r\\n  color: black;\\r\\n}\\r\\n.mat-row:nth-child(even){\\r\\n  background-color: rgb(219, 219, 219);\\r\\n}\\r\\n.mat-row:nth-child(odd){\\r\\n  background-color: rgb(237, 238, 239);\\r\\n}\\r\\n.hideLoader {\\r\\n  display: none;\\r\\n}\\r\\nmat-footer-row mat-footer-cell {\\r\\n  justify-content: center;\\r\\n  font-style: italic;\\r\\n}\\r\\n.mat-form-field {\\r\\n  font-size: 16px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"\\n\\n<div class=\\\"table-container\\\">\\n  <div class=\\\"display-1\\\"><h1>Shipping List</h1></div>\\n  <mat-form-field  color=\\\"accent\\\">\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n  </mat-form-field>\\n<mat-table [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"shipOptionId\\\" matSortDirection=\\\"asc\\\" matSortDisableClear>\\n\\n  <!-- Position Column -->\\n  <ng-container matColumnDef=\\\"shipOptionId\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header> Ship Option Id </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.shipOptionId}} </mat-cell>\\n  </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container matColumnDef=\\\"shipOptionName\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header> Ship Option Name </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.shipOptionName}} </mat-cell>\\n  </ng-container>\\n\\n  <!-- Weight Column -->\\n  <ng-container matColumnDef=\\\"carrierName\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header> Carrier </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.carrierName}} </mat-cell>\\n  </ng-container>\\n\\n  <!-- Weight Column -->\\n  <ng-container matColumnDef=\\\"shipCost\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header> Cost </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\"> {{element.shipCost}} </mat-cell>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"loading\\\">\\n    <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\"> Loading data...</mat-footer-cell>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"noData\\\">\\n    <mat-footer-cell *matFooterCellDef colspan=\\\"6\\\"> Data no found</mat-footer-cell>\\n  </ng-container>\\n\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n  <mat-footer-row *matFooterRowDef=\\\"['loading']\\\" [ngClass]=\\\"{'hideLoader': dataSource!=null}\\\"></mat-footer-row>\\n  <mat-footer-row *matFooterRowDef=\\\"['noData']\\\" [ngClass]=\\\"{'hideLoader': !(dataSource!=null && dataSource.data.length==0)}\\\"></mat-footer-row>\\n\\n</mat-table>\\n  <mat-paginator class=\\\"mat-elevation-z8\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" [pageSize]=\\\"5\\\" showFirstLastButtons></mat-paginator>\\n\\n</div>\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatPaginator, MatSort, MatSortable, MatTableDataSource} from '@angular/material';\nimport {ShippingService} from '../../services/shipping.service';\n\n@Component({\n  selector: 'app-shipping-table',\n  templateUrl: './shipping-table.component.html',\n  styleUrls: ['./shipping-table.component.css']\n})\nexport class ShippingTableComponent implements OnInit {\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  dataSource;\n  displayedColumns = ['shipOptionId', 'shipOptionName', 'carrierName', 'shipCost'];\n\n  constructor(private shippingService: ShippingService) {}\n\n  ngOnInit() {\n    this.shippingService.getShipping().subscribe(results => {\n      if (!results) {\n        return;\n      }\n      this.dataSource = new MatTableDataSource(results);\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}